(function () {
"use strict";
  
// function: merge
// provide a "safe" intersection of two sorted arrays
// http://stackoverflow.com/questions/1885557/simplest-code-for-array-intersection-in-javascript
function merge(a, b)
{
	var ai=0, bi=0, result = new Array( a.length + b.length );
  var idx = 0;

	while( ai < a.length && bi < b.length )
	{
		if      (a[ai] < b[bi] ){ result[idx++] = a[ai++]; }
		else if (a[ai] > b[bi] ){ result[idx++] = b[bi++]; }
		else { result[idx++] = a[ai++]; bi++; }
	}

  while( ai < a.length ) { result[idx++] = a[ai++]; }
  while( bi < b.length ) { result[idx++] = b[bi++]; }

  result.length = idx;

	return result;
}

function mini(a,b){ return(a<b?a:b); }
function maxi(a,b){ return(a>b?a:b); }


function buildBigPotions(idx)
{
  // NOTE: every potion # less than max is a two ingredient potion
  var max = idx.pot.num;
  var seen = {};

  for( var i=0; i<max-1; i++ ){
    var A = idx.pot.lab[i];

    for( var j=i+1; j<max; j++ ){
      var B = idx.pot.lab[j];

      // at least one ingredient must be in common to proceed
      if( A.ing[0] != B.ing[0] && A.ing[0] != B.ing[1] && A.ing[1] != B.ing[0] && A.ing[1] != B.ing[1] ) continue;

      // if an other variant of this potion has already been seen, jump out...
      var ings = merge( A.ing, B.ing );
      var key = ings.join(':');
      if( key in seen ) continue;
      seen[key] = true;

      // if no new effects are generated, this new potion is viable but useless...
      var mustHit = maxi(A.eff.length,B.eff.length);
      var effs = merge( A.eff, B.eff );
      if( effs.length <= mustHit ) continue;

      var pot = {
        n: idx.pot.num++,
        ing: merge( A.ing, B.ing ),
        eff: effs
      };

      idx.pot.lab.push( pot );
      idx.pot.ni[3].push( pot.n );
      idx.pot.ne[pot.eff.length].push( pot.n );
      idx.ing.pot[pot.ing[0]].push( pot.n );
      idx.ing.pot[pot.ing[1]].push( pot.n );
      idx.ing.pot[pot.ing[2]].push( pot.n );
      for( var i=0; i<pot.eff.length; i++ ) idx.eff.pot[pot.eff[i]].push( pot.n );
      if( idx.pot.num%100 == 0 ) console.info( "[" + idx.pot.num + "] Adding... " + key );
    }
  }
}

window.onload = function () {
  debugger; 
  var idx = getIdx();
  buildBigPotions(idx);
  var div = document.getElementById('fullJSON');
  div.innerHTML = "/* autogenerated content -- DO NOT MODIFY\n" +
      " * to change this data you must:\n" +
      " * 1. edit scripts/parser.js\n" +
      " * 2. load parser.html\n" +
      " * 3. paste the content into scripts/index.js\n" +
      " */\n\n" +
      "function getIdx() { return(" +
      JSON.stringify(idx, null, ' ') +
      "\n);}";
};
}());
// vim: set ts=2 sw=2 et:
